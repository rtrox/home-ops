---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

tasks:
  default-requires:
    internal: true
    requires: &default-requires
      vars:
        - &requires-cluster-name
          name: CLUSTER_NAME
          enum: [chongus, bitty]

  talos-cluster:
    desc: Bootstrap Talos
    requires: *default-requires
    vars:
      TALOS_CONTROLLER:
       sh: talosctl config use-context ${CLUSTER_NAME} && talosctl config info --output json | jq --raw-output '.endpoints[]' | shuf -n 1
    preconditions:
      - talosctl config use-context ${CLUSTER_NAME}
      - which jq minijinja-cli sops talosctl
      - echo "{{.TALOSCONFIG}}"
      - test -f "{{.TALOSCONFIG}}"
      - talosctl config info
    cmds:
      - talosctl config use-context ${CLUSTER_NAME}
      - until talosctl --nodes {{.TALOS_CONTROLLER}} bootstrap; do sleep 5; done
      - talosctl kubeconfig --nodes {{.TALOS_CONTROLLER}} --force --force-context-name "${CLUSTER_NAME}" "${KUBECONFIG}"

  apps:
    desc: Bootstrap Apps
    prompt: Bootstrap apps into Talos cluster?
    requires: *default-requires
    preconditions:
      - which yq sops helmfile kubectl
      - test -f "{{.TALOSCONFIG}}"
      - test -f {{.CLUSTER_DIR}}/bootstrap/resources/namespaces.yaml
      - test -f {{.CLUSTER_DIR}}/bootstrap/resources/github-deploy-key.cho.yaml
      - test -f {{.CLUSTER_DIR}}/bootstrap/resources/sops-age.cho.yaml
      - test -f {{.CLUSTER_DIR}}/bootstrap/helmfile.d/00-crds.yaml
      - test -f {{.CLUSTER_DIR}}/bootstrap/helmfile.d/01-apps.yaml

      - talosctl config info
    env:
      NODE_COUNT:
        sh: talosctl config info --output json | jq --raw-output '.nodes | length'
      ROOK_DISK: nvme-Samsung_SSD_990_PRO_1TB
    cmds:
      # - until kubectl wait nodes --for=condition=Ready=False --all --timeout=10m; do sleep 5; done
      - kubectl apply --server-side --filename {{.CLUSTER_DIR}}/bootstrap/resources/namespaces.yaml
      - sops -d {{.CLUSTER_DIR}}/bootstrap/resources/github-deploy-key.cho.yaml | kubectl apply --server-side --filename -
      - sops -d {{.CLUSTER_DIR}}/bootstrap/resources/sops-age.cho.yaml | kubectl apply --server-side --filename -
      - helmfile --quiet --file {{.CLUSTER_DIR}}/bootstrap/helmfile.d/00-crds.yaml template | kubectl apply --server-side --filename -
      - helmfile --file {{.CLUSTER_DIR}}/bootstrap/helmfile.d/01-apps.yaml sync --hide-notes