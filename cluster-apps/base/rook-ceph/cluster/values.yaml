---
monitoring:
  enabled: true
  createPrometheusRules: true
cephClusterSpec:
  cephConfig:
    global:
      bdev_enable_discard: "true" # quote
      bdev_async_discard_threads: "1" # quote
      osd_class_update_on_start: "false" # quote
      device_failure_prediction_mode: local # requires mgr module
  cleanupPolicy:
    wipeDevicesFromOtherClusters: true
  crashCollector:
    disable: false
  dashboard:
    enabled: true
    urlPrefix: /
    ssl: false
    prometheusEndpoint: http://prometheus-operated.observability.svc.cluster.local:9090
  network:
    provider: host
    connections:
      requireMsgr2: true
  placement:
    all:
      tolerations:
        - key: node-role.kubernetes.io/control-plane
          operator: Exists
          effect: NoSchedule

cephBlockPools:
  - name: ceph-blockpool
    spec:
      failureDomain: host
      replicated:
        size: 3
    storageClass:
      enabled: true
      name: ceph-block
      isDefault: true
      reclaimPolicy: Delete
      allowVolumeExpansion: true
      volumeBindingMode: Immediate
      parameters:
        imageFormat: "2"
        imageFeatures: layering,fast-diff,object-map,deep-flatten,exclusive-lock
        csi.storage.k8s.io/provisioner-secret-name: rook-csi-rbd-provisioner
        csi.storage.k8s.io/provisioner-secret-namespace: "{{ .Release.Namespace }}"
        csi.storage.k8s.io/controller-expand-secret-name: rook-csi-rbd-provisioner
        csi.storage.k8s.io/controller-expand-secret-namespace: "{{ .Release.Namespace }}"
        csi.storage.k8s.io/node-stage-secret-name: rook-csi-rbd-node
        csi.storage.k8s.io/node-stage-secret-namespace: "{{ .Release.Namespace }}"
        csi.storage.k8s.io/fstype: ext4

cephBlockPoolsVolumeSnapshotClass:
  enabled: true
  name: csi-ceph-blockpool
  isDefault: false
  deletionPolicy: Delete

cephFileSystems: []
cephObjectStores: []
