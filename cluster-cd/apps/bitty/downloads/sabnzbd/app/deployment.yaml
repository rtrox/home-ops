---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: &name sabnzbd
    app.kubernetes.io/instance: *name
    app.kubernetes.io/component: *name
    app.kubernetes.io/part-of: *name
    k8s-app: *name
  name: *name
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: *name
      app.kubernetes.io/instance: *name
      app.kubernentes.io/component: *name
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: *name
        app.kubernetes.io/instance: *name
        app.kubernentes.io/component: *name
        setGateway: "true"
      annotations:
        secret.reloader.stakater.com/reload: auto
    spec:
      securityContext:
        fsGroup: 568
        fsGroupChangePolicy: "OnRootMismatch"
        supplementalGroups:
          - 100
      containers:
        - name: sabnzbd
          image: ghcr.io/onedr0p/sabnzbd:4.4.1@sha256:36674664a94760ae934c09b1d97546a3e79a0f110edda88085e74778c26d68e3
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              memory: 8Gi
            requests:
              memory: 250Mi
          securityContext:
            allowPrivilegeEscalation: false
            runAsUser: 568
            runAsGroup: 568
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              drop:
                - ALL
          ports:
            - name: http
              containerPort: 8080
          env:
            - name: TZ
              value: ${LOCAL_TZ}
            - name: SABNZBD__PORT
              value: "8080"
            - name: SABNZBD__HOST_WHITELIST_ENTRIES
              value: >-
                sabznbd,
                sabnzbd.downloads,
                sabnzbd.downloads.svc,
                sabnzbd.downloads.svc.cluster,
                sabnzbd.downloads.svc.cluster.local,
                sab.${SECRET_DOMAIN}
          envFrom:
            - secretRef:
                name: sabnzbd-secret
          livenessProbe:
            httpGet:
              path: /
              port: http
              scheme: HTTP
            initialDelaySeconds: 10
            failureThreshold: 5
            timeoutSeconds: 2
          readinessProbe:
            httpGet:
              path: /
              port: http
              scheme: HTTP
            initialDelaySeconds: 10
            failureThreshold: 5
            timeoutSeconds: 2
          startupProbe:
            httpGet:
              path: /
              port: http
              scheme: HTTP
            initialDelaySeconds: 10
            failureThreshold: 5
            timeoutSeconds: 2
          volumeMounts:
            - mountPath: /config
              name: config
            - mountPath: /media
              name: media
        - name: sabnzbd-exporter
          image: ghcr.io/onedr0p/exportarr:v2.0.1
          ports:
            - name: metrics
              containerPort: 8080
          securityContext:
            allowPrivilegeEscalation: false
            runAsUser: 568
            runAsGroup: 568
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              drop:
                - ALL
          resources:
            limits:
              memory: 256Mi
            requests:
              memory: 64Mi
          args:
            - sabnzbd
          env:
            - name: URL
              value: http://localhost:8080
            - name: PORT
              value: "8081"
            - name: API_KEY
              valueFrom:
                secretKeyRef:
                  name: sabnzbd-secret
                  key: SABNZBD__API_KEY
      volumes:
        # TODO: NFS Volumes
        - name: config
          persistentVolumeClaim:
            claimName: sabnzbd
        - name: media
          nfs:
            server: ${NFS_SERVER}
            path: /mnt/rusty/media
