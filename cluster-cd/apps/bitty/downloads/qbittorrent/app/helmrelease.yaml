---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app qbittorrent
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system

  values:
    controllers:
      qbittorrent:
        annotations:
          reloader.stakater.com/auto: "true"

        containers:
          app:
            nameOverride: *app
            image:
              repository: ghcr.io/home-operations/qbittorrent
              tag: 5.0.4@sha256:995c561247b069c10b1fa098186f35b3155c2df63912041f70637a9232755756
            env:
              UMASK: "022"
              QBT_WEBUI_PORT: &port 8080
            # probes:
            #   liveness: &probes
            #     enabled: true
            #     custom: true
            #     spec:
            #       httpGet:
            #         path: /api/v2/app/version
            #         port: *port
            #       initialDelaySeconds: 0
            #       timeoutSeconds: 10
            #       periodSeconds: 5
            #       failureThreshold: 5
            #   readiness: *probes
            securityContext:
              runAsUser: 568
              runAsGroup: 568
              runAsNonRoot: true
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL

          vuetorrent:
            dependsOn: app
            image:
              repository: registry.k8s.io/git-sync/git-sync
              tag: v4.4.0
            args:
              - --repo=https://github.com/WDaan/VueTorrent
              - --ref=latest-release
              - --period=86400s
              - --root=/addons
            resources:
              requests:
                cpu: 10m
                memory: 25Mi

        initContainers:
          gluetun:
            image:
              repository: ghcr.io/qdm12/gluetun
              tag: v3.40.0
            env:
              VPN_PORT_FORWARDING: "on"
              VPN_PORT_FORWARDING_STATUS_FILE: /gluetun/forwarded_port
              VPN_PORT_FORWARDING_UP_COMMAND: |
                /bin/sh -c 'wget -O- --retry-connrefused --post-data "json={\"listen_port\":{{`{{PORTS}}`}}}" http://127.0.0.1:8080/api/v2/app/setPreferences 2>&1'
            envFrom:
              - secretRef:
                  name: wireguard-secret
            # probes:
            #   liveness:
            #     enabled: true
            #     custom: true
            #     spec:
            #       httpGet:
            #         path: /
            #         port: 9999
            #       timeoutSeconds: 10
            #       periodSeconds: 30
            #       failureThreshold: 5
            #   startup:
            #     enabled: true
            #     custom: true
            #     spec:
            #       httpGet:
            #         path: /
            #         port: 9999
            #       initialDelaySeconds: 10
            #       periodSeconds: 10
            #       failureThreshold: 5
            restartPolicy: Always
            securityContext:
              capabilities:
                add:
                  - NET_ADMIN
              allowPrivilegeEscalation: false

          # TODO: Replace once gluetun supports socks5, nothing supports shadowsocks
          socks5:
            restartPolicy: Always
            image:
              repository: serjs/go-socks5-proxy
              tag: latest@sha256:aad36c623f16850d7cea0171d1aa79d706129191db9e270b6dfd7db6b552c734
            env:
              PROXY_PORT: &proxy-port 8388

    defaultPodOptions:
      terminationGracePeriodSeconds: 300
      securityContext:
        fsGroup: 568
        fsGroupChangePolicy: "OnRootMismatch"

    service:
      app:
        controller: *app
        nameOverride: *app
        ports:
          http:
            port: *port

      gluetun:
        controller: *app
        nameOverride: gluetun
        ports:
          socks-proxy:
            enabled: true
            port: *proxy-port

    ingress:
      app:
        className: nginx
        hosts:
          - host: "qb.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http

    persistence:
      config:
        existingClaim: *app
        advancedMounts:
          qbittorrent:
            app:
              - path: /config

      media:
        type: nfs
        server: ${NFS_SERVER}
        path: /mnt/rusty/media
        globalMounts:
          - path: /media

      addons:
        type: persistentVolumeClaim
        accessMode: ReadWriteOnce
        storageClass: ceph-block
        size: 1Gi

      openvpn:
        type: secret
        name: openvpn-secret
        globalMounts:
          - path: /gluetun-config/
