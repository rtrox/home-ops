---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: &name stash
    app.kubernetes.io/instance: *name
    app.kubernetes.io/component: *name
    app.kubernetes.io/part-of: *name
    k8s-app: *name
  name: *name
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: *name
      app.kubernetes.io/instance: *name
      app.kubernentes.io/component: *name
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: *name
        app.kubernetes.io/instance: *name
        app.kubernentes.io/component: *name
    spec:
      initContainers:
        - name: ensure-ipv6-access
          image: alpine:3.21.3
          imagePullPolicy: IfNotPresent
          command:
            - "sh"
            - "-c"
            - 'sed -i "s/^dangerous_allow_public_without_auth:.*$/dangerous_allow_public_without_auth: true/" /root/.stash/config.yml 2>&1 || true'
          securityContext:
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              drop:
                - ALL
          resources:
            limits:
              memory: 16Mi
            requests:
              memory: 16Mi
          volumeMounts:
            - mountPath: /root/.stash
              name: config
      containers:
        - name: stash
          image: stashapp/stash:v0.28.1@sha256:645f6c15b079410d50d488dbeb247c92f25534094dad4e15d886e47648b897f7
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              memory: 4Gi
              gpu.intel.com/i915: 1
            requests:
              memory: 4Gi
              gpu.intel.com/i915: 1
          securityContext:
            privileged: true
            runAsUser: 0
            runAsGroup: 0
          ports:
            - name: http
              containerPort: 9999
          env:
            - name: TZ
              value: ${LOCAL_TZ}
            - name: STASH_STASH
              value: /media/
            - name: STASH_GENERATED
              value: /generated/
            - name: STASH_METADATA
              value: /metadata/
            - name: STASH_CACHE
              value: /cache/
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          #     scheme: HTTP
          #   initialDelaySeconds: 10
          #   failureThreshold: 5
          #   timeoutSeconds: 2
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          #     scheme: HTTP
          #   initialDelaySeconds: 10
          #   failureThreshold: 5
          #   timeoutSeconds: 2
          # startupProbe:
          #   httpGet:
          #     path: /
          #     port: http
          #     scheme: HTTP
          #   initialDelaySeconds: 10
          #   failureThreshold: 5
          #   timeoutSeconds: 2
          volumeMounts:
            - mountPath: /root/.stash
              name: config
            - mountPath: /media
              name: media
            - mountPath: /generated
              name: generated
            - mountPath: /cache
              name: cache
            - name: metadata
              mountPath: /metadata
            - name: blobs
              mountPath: /blobs
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: stash
        - name: media
          nfs:
            server: ${NFS_SERVER}
            path: /mnt/rusty/media/.homework/library/
        - name: generated
          nfs:
            server: ${NFS_SERVER}
            path: /mnt/rusty/media/.homework/generated/
        - name: metadata
          nfs:
            server: ${NFS_SERVER}
            path: /mnt/rusty/media/.homework/metadata/
        - name: blobs
          nfs:
            server: ${NFS_SERVER}
            path: /mnt/rusty/media/.homework/blobs/
        - name: cache
          emptyDir: {}
