---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: paperless
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.3.2
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system

  values:
    defaultPodOptions:
      enableServiceLinks: true
    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"

        pod:
          securityContext:
            supplementalGroups:
              - 65542 # gladius:external-services

        containers:
          main:
            image:
              repository: ghcr.io/paperless-ngx/paperless-ngx
              tag: 2.12.1
            env:
              # Configure application
              PAPERLESS_APPS: allauth.socialaccount.providers.openid_connect
              PAPERLESS_SECRET_KEY:
                valueFrom:
                  secretKeyRef:
                    name: paperless-secret
                    key: PAPERLESS_SECRET_KEY
              PAPERLESS_URL: https://paper.${SECRET_DOMAIN}
              PAPERLESS_PORT: "8000"
              PAPERLESS_TIME_ZONE: ${LOCAL_TZ}
              PAPERLESS_WEBSERVER_WORKERS: "2"
              PAPERLESS_TASK_WORKERS: "2"
              # Configure Remote User auth
              PAPERLESS_ACCOUNT_ALLOW_SIGNUPS: "false"
              # PAPERLESS_SOCIALACCOUNT_ALLOW_SIGNUPS: "true"
              # PAPERLESS_SOCIALACCOUNT_PROVIDERS:
              #   valueFrom:
              #     secretKeyRef:
              #       name: paperless-secret
              #       key: PAPERLESS_SOCIALACCOUNT_PROVIDERS
              # Configure folders
              PAPERLESS_CONSUMPTION_DIR: /data/nas/incoming
              PAPERLESS_DATA_DIR: /data/local/data
              PAPERLESS_EXPORT_DIR: /data/nas/export
              PAPERLESS_MEDIA_ROOT: /data/docs
              # Configure folder importer
              PAPERLESS_CONSUMER_POLLING: "5"
              PAPERLESS_CONSUMER_POLLING_RETRY_COUNT: "120"
              PAPERLESS_CONSUMER_RECURSIVE: "true"
              PAPERLESS_CONSUMER_SUBDIRS_AS_TAGS: "true"
              PAPERLESS_CONSUMER_ENABLE_BARCODES: "true" # enable search for barcodes
              PAPERLESS_CONSUMER_ENABLE_ASN_BARCODE: "true" # enable setting ASN by ASN barcodes
              PAPERLESS_CONSUMER_BARCODE_SCANNER: "ZXING" # switch from pyzbar to zxing for better recognition
              # Configure OCR
              PAPERLESS_OCR_LANGUAGES: eng
              PAPERLESS_OCR_LANGUAGE: eng
              # Configure redis integration
              PAPERLESS_REDIS: redis://paperless-redis.default.svc.cluster.local:6379
              PAPERLESS_TIKA_ENABLED: "true"
              PAPERLESS_TIKA_ENDPOINT: "http://paperless-tika.default.svc.cluster.local"
              PAPERLESS_TIKA_GOTENBERG_ENDPOINT: "http://paperless-gotenberg.default.svc.cluster.local"
              # Configure admin user
              PAPERLESS_ADMIN_USER:
                valueFrom:
                  secretKeyRef:
                    name: paperless-secret
                    key: PAPERLESS_ADMIN_USER
              PAPERLESS_ADMIN_PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: paperless-secret
                    key: PAPERLESS_ADMIN_PASSWORD
            resources:
              requests:
                cpu: 11m
                memory: 2048Mi
              limits:
                memory: 8096Mi

      tika:
        type: deployment
        replicas: 1
        containers:
          main:
            image:
              repository: "ghcr.io/paperless-ngx/tika"
              tag: "2.9.1-full@sha256:d59c38244949a418ef16be676eeea770e1616b45986661847d373f4de048a37e"
            resources:
              requests:
                cpu: "10m"
                memory: "256Mi"
              limits:
                cpu: "3000m"
                memory: "6000Mi"
      gotenberg:
        type: deployment
        replicas: 1
        containers:
          main:
            image:
              repository: "docker.io/gotenberg/gotenberg"
              tag: "8.9.0@sha256:06d369426a3dcecd15f71b8ac9a81dc26819c5825fc72559c16c4c45c8aea8fc"
            command:
              [
                "gotenberg",
                "--chromium-disable-javascript=true",
                "--chromium-allow-list=file:///tmp/.*",
              ]
            resources:
              requests:
                cpu: "10m"
                memory: "64Mi"
              limits:
                cpu: "3000m"
                memory: "6000Mi"

    service:
      main:
        controller: main
        ports:
          http:
            port: 8000
      tika:
        controller: "tika"
        ports:
          tika:
            port: 80
            targetPort: 9998
      gotenberg:
        controller: "gotenberg"
        ports:
          gotenberg:
            port: 80
            targetPort: 3000

    ingress:
      main:
        enabled: true
        className: "nginx"
        hosts:
          - host: &host "paper.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: main
                  port: http
        tls:
          - hosts:
              - *host

    persistence:
      data:
        enabled: true
        existingClaim: "${APP}"
        advancedMounts:
          main:
            main:
              - path: /data/local
      docs:
        type: nfs
        server: ${NFS_SERVER}
        path: /mnt/rusty/documents
        globalMounts:
          - path: /data/docs
      nas:
        type: nfs
        server: ${NFS_SERVER}
        path: /mnt/zippy/shared/paperless
        globalMounts:
          - path: /data/nas
