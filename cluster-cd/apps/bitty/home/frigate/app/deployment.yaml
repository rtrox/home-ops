apiVersion: apps/v1
kind: Deployment
metadata:
  name: &name frigate
spec:
  replicas: 1
  selector:
    matchLabels:
      name: *name
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        name: *name
        app: *name
        app.kubernetes.io/instance: *name
        app.kubernetes.io/name: *name
        app.kubernetes.io/part-of: *name
    spec:
      initContainers:
        - name: config
          image: ghcr.io/onedr0p/alpine:3.19.1
          command: ["sh", "-c"]
          args:
            - |
              envsubst < /tmp/config/config.yml > /config/config.yml
              echo "Config:"
              cat /config/config.yml
          env:
            - name: FRIGATE_LB_IPV4
              value: ${FRIGATE_LB_IPV4}
            - name: FRIGATE_LB_IPV6
              value: ${FRIGATE_LB_IPV6}
          envFrom:
            - secretRef:
                name: frigate-secret
          volumeMounts:
            - name: mounted-config
              mountPath: /config
            - name: frigate-config
              mountPath: /tmp/config
      containers:
        - name: frigate
          image: ghcr.io/blakeblackshear/frigate:0.14.1
          env:
            - name: TZ
              value: ${LOCAL_TZ}
            - name: LIBVA_DRIVER_NAME
              value: i915
            - name: FRIGATE_MQTT_USER
              value: frigate
          envFrom:
            - secretRef:
                name: frigate-secret
          ports:
            - containerPort: 5000
              name: http
              protocol: TCP
            - containerPort: 8554
              name: rtsp
              protocol: TCP
            - containerPort: 1984
              name: go2rtc
              protocol: TCP
            - containerPort: 8555
              name: webrtctcp
              protocol: TCP
            - containerPort: 8555
              name: webrtcudp
              protocol: UDP
          livenessProbe: &probe
            httpGet:
              path: /api/version
              port: http
              scheme: HTTP
            initialDelaySeconds: 0
            failureThreshold: 5
            timeoutSeconds: 1
            periodSeconds: 10
          readinessProbe: *probe
          resources:
            limits:
              memory: 4000Mi
              gpu.intel.com/i915: 1
            requests:
              memory: 2000Mi
              gpu.intel.com/i915: 1
          securityContext:
            allowPrivilegeEscalation: true
            privileged: true
          volumeMounts:
            - mountPath: /dev/bus/usb
              name: usb
            - mountPath: /dev/shm
              name: cache
              medium: Memory
            - mountPath: /media
              name: media
            - mountPath: /data
              name: frigate-data
            - mountPath: /config
              name: mounted-config
      volumes:
        - name: usb
          hostPath:
            path: /dev/bus/usb
            type: Directory
        - name: cache
          emptyDir: {}
        - name: frigate-data
          persistentVolumeClaim:
            claimName: frigate-data
        - name: media
          persistentVolumeClaim:
            claimName: frigate-media
        - name: mounted-config
          emptyDir: {}
        - name: frigate-config
          configMap:
            name: frigate-config
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: google.feature.node.kubernetes.io/coral
                    operator: In
                    values:
                      - "true"
