---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: grafana
  namespace: monitoring
spec:
  chart:
    spec:
      chart: grafana
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: grafana-charts
        namespace: flux-system
      version: 7.3.0
  interval: 30m
  timeout: 20m
  valuesFrom:
    - kind: Secret
      name: grafana-keycloak-secret
      valuesKey: GRAFANA_KEYCLOAK_CLIENT_ID
      targetPath: grafana\.ini.auth.generic_oauth.client_id
  values:
    annotations:
      configmap.reloader.stakater.com/reload: grafana

    replicas: 1

    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: default
            disableDeletion: false
            editable: true
            folder: ""
            options:
              path: /var/lib/grafana/dashboards/default
            orgId: 1
            type: file
          - name: node-exporter
            disableDeletion: false
            editable: true
            folder: "node-exporter"
            options:
              path: /var/lib/grafana/dashboards/node-exporter
            orgId: 1
            type: file

    datasources:
      datasources.yaml:
        apiVersion: 1
        datasources:
          - name: Prometheus (${CLUSTER_NAME})
            type: prometheus
            access: proxy
            url: http://thanos-query:9090/
            isDefault: true
            jsonData:
              customQueryParameters: max_source_resolution=1h
          - access: proxy
            name: Loki
            type: loki
            url: http://loki-gateway.monitoring.svc.cluster.local:80
          - name: Alertmanager
            type: alertmanager
            access: proxy
            url: http://alertmanager.monitoring.svc.cluster.local:9093
            jsonData:
              implementation: prometheus
        deleteDatasources:
          - name: Loki
            orgId: 1
          - name: Alertmanager
            orgId: 1

    deploymentStrategy:
      type: Recreate

    grafana.ini:
      server:
        root_url: https://graf.${SECRET_DOMAIN}/
      auth:
        oauth_auto_login: true
        oauth_allow_insecure_email_lookup: true
        signout_redirect_url: https://auth.${SECRET_DOMAIN}/auth/realms/master/protocol/openid-connect/logout?post_logout_redirect_uri=https%3A%2F%2graf.${SECRET_DOMAIN}%2Flogin
      auth.basic:
        enabled: false
      auth.generic_oauth:
        enabled: true
        name: Keycloak
        allow_sign_up: true
        client_id: ${GRAFANA_KEYCLOAK_CLIENT_ID}
        client_secret: ${GRAFANA_KEYCLOAK_CLIENT_SECRET}
        scopes: "openid email profile offline_access roles"
        auth_url: https://auth.${SECRET_DOMAIN}/auth/realms/${KEYCLOAK_REALM}/protocol/openid-connect/auth
        token_url: https://auth.${SECRET_DOMAIN}/auth/realms/${KEYCLOAK_REALM}/protocol/openid-connect/token
        api_url: https://auth.${SECRET_DOMAIN}/auth/realms/${KEYCLOAK_REALM}/protocol/openid-connect/userinfo
        allow_assign_grafana_admin: true
        login_attribute_path: username
        email_attribute_path: email
        role_attribute_path: "contains(grafana.roles[*], 'grafana-server-admin') && 'GrafanaAdmin' || contains(grafana.roles[*], 'grafana-admin') && 'Admin' || contains(grafana.roles[*], 'grafana-editor') && 'Editor' || 'Viewer'"
      analytics:
        check_for_updates: false
        check_for_plugin_updates: false
        reporting_enabled: false
      date_formats:
        use_browser_locale: true
      explore:
        enabled: true
      grafana_net:
        url: https://grafana.net
      log:
        mode: console
      news:
        news_feed_enabled: false
      panels:
        disable_sanitize_html: true
      paths:
        data: /var/lib/grafana/data
        logs: /var/log/grafana
        plugins: /var/lib/grafana/plugins
        provisioning: /etc/grafana/provisioning
      security:
        allow_embedding: true
        cookie_samesite: grafana

    ingress:
      ingressClassName: nginx
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
        kubernetes.io/tls-acme: "true"
        ingress: externaldns
      enabled: true
      hosts:
        - &graf_host graf.${SECRET_DOMAIN}
      tls:
        - hosts:
            - *graf_host
          secretName: graf-cho-tls

    persistence:
      enabled: true
      size: 1Gi

    plugins:
      - natel-discrete-panel
      - pr0ps-trackmap-panel
      - grafana-piechart-panel
      - vonage-status-panel
      - grafana-worldmap-panel
      - grafana-clock-panel

    rbac:
      pspEnabled: false

    resources:
      limits:
        memory: 219M
      requests:
        cpu: 23m
        memory: 127M

    serviceMonitor:
      enabled: true

    sidecar:
      dashboards:
        enabled: true
        labelValue: ""
        label: grafana_dashboard
        folderAnnotation: grafana_folder
        searchNamespace: ALL
        provider:
          disableDelete: true
          foldersFromFilesStructure: true
      datasources:
        enabled: true
        labelValue: ""
        searchNamespace: ALL
      logLevel: INFO
    assertNoLeakedSecrets: false
