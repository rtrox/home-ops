annotations:
  configmap.reloader.stakater.com/reload: auto

replicas: 1

dashboardProviders:
  dashboardproviders.yaml:
    apiVersion: 1
    providers:
      - name: default
        disableDeletion: false
        editable: true
        folder: ""
        options:
          path: /var/lib/grafana/dashboards/default
        orgId: 1
        type: file
      - name: kubernetes
        disableDeletion: false
        editable: true
        folder: "Kubernetes"
        options:
          path: /var/lib/grafana/dashboards/default/kubernetes
        orgId: 1
        type: file
dashboards:
  kubernetes:
    kubernetes-api-server:
      # renovate: depName="Kubernetes / System / API Server"
      gnetId: 15761
      revision: 17
      datasource: Prometheus (${CLUSTER_NAME})
    kubernetes-coredns:
      # renovate: depName="Kubernetes / System / CoreDNS"
      gnetId: 15762
      revision: 18
      datasource: Prometheus (${CLUSTER_NAME})
    kubernetes-global:
      # renovate: depName="Kubernetes / Views / Global"
      gnetId: 15757
      revision: 37
      datasource: Prometheus (${CLUSTER_NAME})
    kubernetes-namespaces:
      # renovate: depName="Kubernetes / Views / Namespaces"
      gnetId: 15758
      revision: 35
      datasource: Prometheus (${CLUSTER_NAME})
    kubernetes-nodes:
      # renovate: depName="Kubernetes / Views / Nodes"
      gnetId: 15759
      revision: 29
      datasource: Prometheus (${CLUSTER_NAME})
    kubernetes-pods:
      # renovate: depName="Kubernetes / Views / Pods"
      gnetId: 15760
      revision: 28
      datasource: Prometheus (${CLUSTER_NAME})
    kubernetes-volumes:
      # renovate: depName="K8s / Storage / Volumes / Cluster"
      gnetId: 13646
      revision: 2
      datasource: "Prometheus (${CLUSTER_NAME})"
  default:
    ceph-cluster:
      # renovate: depName="Ceph Cluster"
      gnetId: 2842
      revision: 17
      datasource: Prometheus (${CLUSTER_NAME})
    ceph-osd:
      # renovate: depName="Ceph - OSD (Single)"
      gnetId: 5336
      revision: 9
      datasource: Prometheus (${CLUSTER_NAME})
    ceph-pools:
      # renovate: depName="Ceph - Pools"
      gnetId: 5342
      revision: 9
      datasource: Prometheus (${CLUSTER_NAME})
    cert-manager:
      url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/cert-manager/dashboards/cert-manager.json
      datasource: Prometheus (${CLUSTER_NAME})
    cloudflared:
      # renovate: depName="Cloudflare Tunnels (cloudflared)"
      gnetId: 17457
      revision: 6
      datasource:
        - { name: DS_PROMETHEUS, value: "Prometheus (${CLUSTER_NAME})" }
    external-dns:
      # renovate: depName="External-dns"
      gnetId: 15038
      revision: 3
      datasource: Prometheus (${CLUSTER_NAME})
    external-secrets:
      url: https://raw.githubusercontent.com/external-secrets/external-secrets/main/docs/snippets/dashboard.json
      datasource: Prometheus (${CLUSTER_NAME})
    flux-cluster:
      url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/cluster.json
      datasource: Prometheus (${CLUSTER_NAME})
    flux-control-plane:
      url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/control-plane.json
      datasource: Prometheus (${CLUSTER_NAME})
    nginx:
      url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/nginx.json
      datasource: Prometheus (${CLUSTER_NAME})
    nginx-request-handling-performance:
      url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/request-handling-performance.json
      datasource: Prometheus (${CLUSTER_NAME})
    node-exporter-full:
      # renovate: depName="Node Exporter Full"
      gnetId: 1860
      revision: 37
      datasource: Prometheus (${CLUSTER_NAME})
    node-feature-discovery:
      url: https://raw.githubusercontent.com/kubernetes-sigs/node-feature-discovery/master/examples/grafana-dashboard.json
      datasource: Prometheus (${CLUSTER_NAME})
    prometheus:
      # renovate: depName="Prometheus"
      gnetId: 19105
      revision: 3
      datasource: Prometheus (${CLUSTER_NAME})
    smart:
      # renovate: depName="Dashboard for smartctl_exporter"
      gnetId: 20204
      revision: 1
      datasource:
        - { name: DS_PROMETHEUS, value: "Prometheus (${CLUSTER_NAME})" }
    volsync:
      # removate: depNmae="VolSync Dashboard"
      gnetId: 21356
      revision: 1
      datasource:
        - { name: DS_PROMETHEUS, value: "Prometheus (${CLUSTER_NAME})" }
        - { name: VAR_REPLICATIONDESTNAME, value: .*-dst }
datasources:
  datasources.yaml:
    apiVersion: 1
    datasources:
      - name: Prometheus (${CLUSTER_NAME})
        type: prometheus
        access: proxy
        url: http://thanos-query:9090/
        isDefault: true
        jsonData:
          customQueryParameters: max_source_resolution=1h
      - access: proxy
        name: Prometheus (bitty)
        type: prometheus
        url: https://prom-bitty.${SECRET_DOMAIN}
      - name: Alertmanager (${CLUSTER_NAME})
        type: alertmanager
        access: proxy
        url: http://alertmanager.monitoring.svc.cluster.local:9093
        jsonData:
          implementation: prometheus
      - name: Alertmanager (bitty)
        type: alertmanager
        access: proxy
        url: http://am-bitty.${SECRET_DOMAIN}
        jsonData:
          implementation: prometheus
    # deleteDatasources:
    #   - name: Loki
    #     orgId: 1
    #   - name: Alertmanager
    #     orgId: 1

deploymentStrategy:
  type: Recreate

grafana.ini:
  server:
    root_url: https://graf.${SECRET_DOMAIN}/
  auth:
    oauth_auto_login: true
    oauth_allow_insecure_email_lookup: true
    signout_redirect_url: https://auth.${SECRET_DOMAIN}/auth/realms/${KEYCLOAK_REALM}/protocol/openid-connect/logout?post_logout_redirect_uri=https%3A%2F%2graf.${SECRET_DOMAIN}%2Flogin
  auth.basic:
    enabled: false
  auth.generic_oauth:
    enabled: true
    name: Keycloak
    allow_sign_up: true
    scopes: "openid email profile offline_access groups"
    auth_url: https://auth.${SECRET_DOMAIN}/auth/realms/${KEYCLOAK_REALM}/protocol/openid-connect/auth
    token_url: https://auth.${SECRET_DOMAIN}/auth/realms/${KEYCLOAK_REALM}/protocol/openid-connect/token
    api_url: https://auth.${SECRET_DOMAIN}/auth/realms/${KEYCLOAK_REALM}/protocol/openid-connect/userinfo
    allow_assign_grafana_admin: true
    email_attribute_path: email
    login_attribute_path: username
    name_attribute_path: full_name
    role_attribute_path: "contains(groups[*], 'grafana-admin') && 'GrafanaAdmin' || contains(groups[*], 'grafana-admin') && 'Admin' || contains(groups[*], 'grafana-editor') && 'Editor' || 'Viewer'"
  analytics:
    check_for_updates: false
    check_for_plugin_updates: false
    reporting_enabled: false
  date_formats:
    use_browser_locale: true
  explore:
    enabled: true
  grafana_net:
    url: https://grafana.net
  log:
    mode: console
  news:
    news_feed_enabled: false
  panels:
    disable_sanitize_html: true
  paths:
    data: /var/lib/grafana/data
    logs: /var/log/grafana
    plugins: /var/lib/grafana/plugins
    provisioning: /etc/grafana/provisioning
  security:
    allow_embedding: true
    cookie_samesite: grafana

ingress:
  ingressClassName: nginx
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/tls-acme: "true"
    ingress: externaldns
  enabled: true
  hosts:
    - &graf_host graf.${SECRET_DOMAIN}
  tls:
    - hosts:
        - *graf_host
      secretName: graf-cho-tls

persistence:
  enabled: true
  size: 1Gi

plugins:
  - natel-discrete-panel
  - pr0ps-trackmap-panel
  - grafana-piechart-panel
  - vonage-status-panel
  - grafana-worldmap-panel
  - grafana-clock-panel

rbac:
  pspEnabled: false

resources:
  limits:
    memory: 219M
  requests:
    cpu: 23m
    memory: 127M

serviceMonitor:
  enabled: true

sidecar:
  dashboards:
    enabled: true
    labelValue: ""
    label: grafana_dashboard
    folderAnnotation: grafana_folder
    searchNamespace: ALL
    provider:
      disableDelete: true
      foldersFromFilesStructure: true
  datasources:
    enabled: true
    labelValue: ""
    searchNamespace: ALL
  logLevel: INFO
assertNoLeakedSecrets: false
