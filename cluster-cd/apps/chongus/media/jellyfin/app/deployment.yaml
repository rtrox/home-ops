---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: &name jellyfin
    app.kubernetes.io/instance: *name
    app.kubernetes.io/component: *name
    app.kubernetes.io/part-of: *name
    k8s-app: *name
  name: *name
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: *name
      app.kubernetes.io/instance: *name
      app.kubernentes.io/component: *name
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: *name
        app.kubernetes.io/instance: *name
        app.kubernentes.io/component: *name
      annotations:
        backup.velero.io/backup-volumes: config
        backup.velero.io/backup-volumes-excludes: media
    spec:
      replicas: 1
      runtimeClassName: nvidia
      securityContext:
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: "OnRootMismatch"
        supplementalGroups:
          - 100
      containers:
        - name: jellyfin
          image: ghcr.io/onedr0p/jellyfin:10.8.8@sha256:342c94a24b9c12e6b5a4de2d506229b9313d39026404a8137be1df9481ed0e68
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              memory: 8Gi
              nvidia.com/gpu: 1
            requests:
              memory: 4Gi
              nvidia.com/gpu: 1
          securityContext:
            allowPrivilegeEscalation: false
            runAsUser: 568
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              drop:
                - ALL
          ports:
            - name: http
              containerPort: 8096
          env:
            - name: TZ
              value: ${LOCAL_TZ}
          # envFrom:
          # - secretRef:
          #     name: jellyfin-secret
          livenessProbe:
            httpGet:
              path: /
              port: http
              scheme: HTTP
            initialDelaySeconds: 10
            failureThreshold: 5
            timeoutSeconds: 2
          readinessProbe:
            httpGet:
              path: /
              port: http
              scheme: HTTP
            initialDelaySeconds: 10
            failureThreshold: 5
            timeoutSeconds: 2
          startupProbe:
            httpGet:
              path: /
              port: http
              scheme: HTTP
            initialDelaySeconds: 10
            failureThreshold: 5
            timeoutSeconds: 2
          volumeMounts:
            - mountPath: /config
              name: config
            - mountPath: /media
              name: media
            - mountPath: /transcodes
              name: transcodes
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: jellyfin
        - name: media
          nfs:
            server: ${NFS_SERVER}
            path: /mnt/rusty/media
        - name: transcodes
          emptyDir: {}
