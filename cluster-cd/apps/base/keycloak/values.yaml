replicas: 2
image:
  repository: quay.io/keycloak/keycloak
  tag: "23.0.6"

command:
  - "/opt/keycloak/bin/kc.sh"
  - "--verbose"
  - "start"
  - "--http-enabled=true"
  - "--http-port=8080"
  - "--hostname-strict=false"
  - "--hostname-strict-https=false"
  - "--spi-events-listener-jboss-logging-success-level=info"
  - "--spi-events-listener-jboss-logging-error-level=warn"

extraEnv: |
  - name: JAVA_OPTS_APPEND
    value: >-
      -XX:+UseContainerSupport
      -XX:MaxRAMPercentage=50.0
      -Djava.awt.headless=true
      -Djgroups.dns.query={{ include "keycloak.fullname" . }}-headless
  - name: KC_PROXY
    value: "edge"

extraEnvFrom: |
  - secretRef:
      name: keycloak-secret

dbchecker:
  enabled: true

database:
  vendor: "postgres"
  hostname: "postgres-rw.database.svc.cluster.local"
  port: "5432"
  database: "keycloak"
  user: "keycloak"
  existingSecret: "keycloak-secret"

extraInitContainers: |
  - name: initdb
    image: ghcr.io/onedr0p/postgres-init:16.1
    imagePullPolicy: IfNotPresent
    securityContext:
      allowPrivilegeEscalation: false
      runAsUser: 314
      runAsNonRoot: true
      seccompProfile:
        type: RuntimeDefault
      capabilities:
        drop:
          - ALL
    envFrom:
      - secretRef:
          name: keycloak-secret

ingress:
  enabled: true
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/tls-acme: "true"
    ingress: "externaldns"
  rules:
    - host: "auth.${SECRET_DOMAIN}"
      paths:
        - path: "/"
          pathType: Prefix
  tls:
    - hosts:
        - "auth.${SECRET_DOMAIN}"
      secretName: "auth-tls"

serviceMonitor:
  enabled: true
